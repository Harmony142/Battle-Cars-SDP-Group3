{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alanc\\\\Desktop\\\\socket.io-react-hooks-chat-master\\\\client\\\\src\\\\ChatRoom\\\\ChatRoom.jsx\";\nimport React from \"react\";\nimport \"./ChatRoom.css\";\nimport useChat from \"../useChat\";\n\nconst ChatRoom = props => {\n  const {\n    roomId\n  } = props.match.params;\n  const {\n    messages,\n    sendMessage\n  } = useChat(roomId);\n  const [newMessage, setNewMessage] = React.useState(\"\");\n  const keysPressed = {\n    'w': false,\n    'a': false,\n    's': false,\n    'd': false\n  };\n  document.addEventListener('keydown', e => keysPressed[e.key] = true);\n  document.addEventListener('keyup', e => keysPressed[e.key] = false);\n\n  const handleKeyPress = event => {\n    sendMessage(JSON.stringify(keysPressed));\n    setNewMessage(\"\");\n  };\n\n  const handleNewMessageChange = event => {\n    setNewMessage(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onKeyPress: handleKeyPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"room-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"Name: \", roomId), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: newMessage,\n    onChange: handleNewMessageChange,\n    placeholder: \"Write message...\",\n    className: \"new-message-input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"send-message-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Send\"));\n};\n\nexport default ChatRoom;","map":{"version":3,"sources":["C:/Users/alanc/Desktop/socket.io-react-hooks-chat-master/client/src/ChatRoom/ChatRoom.jsx"],"names":["React","useChat","ChatRoom","props","roomId","match","params","messages","sendMessage","newMessage","setNewMessage","useState","keysPressed","document","addEventListener","e","key","handleKeyPress","event","JSON","stringify","handleNewMessageChange","target","value"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAK,CAACE,KAAN,CAAYC,MAA/B;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BP,OAAO,CAACG,MAAD,CAAzC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BV,KAAK,CAACW,QAAN,CAAe,EAAf,CAApC;AACA,QAAMC,WAAW,GAAG;AAAC,SAAI,KAAL;AAAY,SAAI,KAAhB;AAAuB,SAAI,KAA3B;AAAkC,SAAI;AAAtC,GAApB;AACAC,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCC,CAAC,IAAIH,WAAW,CAACG,CAAC,CAACC,GAAH,CAAX,GAAqB,IAA/D;AACAH,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCC,CAAC,IAAIH,WAAW,CAACG,CAAC,CAACC,GAAH,CAAX,GAAqB,KAA7D;;AAEA,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAChCV,IAAAA,WAAW,CAACW,IAAI,CAACC,SAAL,CAAeR,WAAf,CAAD,CAAX;AACAF,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD,GAHD;;AAKA,QAAMW,sBAAsB,GAAIH,KAAD,IAAW;AACxCR,IAAAA,aAAa,CAACQ,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,UAAU,EAAEN,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAiCb,MAAjC,CADF,eAEE;AACE,IAAA,KAAK,EAAEK,UADT;AAEE,IAAA,QAAQ,EAAEY,sBAFZ;AAGE,IAAA,WAAW,EAAC,kBAHd;AAIE,IAAA,SAAS,EAAC,yBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE;AAAQ,IAAA,SAAS,EAAC,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CADF;AAcD,CA/BD;;AAiCA,eAAenB,QAAf","sourcesContent":["import React from \"react\";\n\nimport \"./ChatRoom.css\";\nimport useChat from \"../useChat\";\n\nconst ChatRoom = (props) => {\n  const { roomId } = props.match.params;\n  const { messages, sendMessage } = useChat(roomId);\n  const [newMessage, setNewMessage] = React.useState(\"\");\n  const keysPressed = {'w':false, 'a':false, 's':false, 'd':false};\n  document.addEventListener('keydown', e => keysPressed[e.key] = true)\n  document.addEventListener('keyup', e => keysPressed[e.key] = false)\n\n  const handleKeyPress = (event) => {\n    sendMessage(JSON.stringify(keysPressed));\n    setNewMessage(\"\");\n  }\n\n  const handleNewMessageChange = (event) => {\n    setNewMessage(event.target.value);\n  };\n\n  return (\n    <div onKeyPress={handleKeyPress}>\n      <h1 className=\"room-name\">Name: {roomId}</h1>\n      <textarea\n        value={newMessage}\n        onChange={handleNewMessageChange}\n        placeholder=\"Write message...\"\n        className=\"new-message-input-field\"\n      />\n      <button className=\"send-message-button\">\n        Send\n      </button>\n    </div>\n  );\n};\n\nexport default ChatRoom;\n"]},"metadata":{},"sourceType":"module"}