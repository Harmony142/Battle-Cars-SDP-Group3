{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alanc\\\\Desktop\\\\socket.io-react-hooks-chat-master\\\\client\\\\src\\\\ChatRoom\\\\ChatRoom.jsx\";\nimport React from \"react\";\nimport \"./ChatRoom.css\";\nimport useChat from \"../useChat\";\n\nconst ChatRoom = props => {\n  const {\n    roomId\n  } = props.match.params;\n  const {\n    messages,\n    sendMessage\n  } = useChat(roomId);\n  const [newMessage, setNewMessage] = React.useState(\"\");\n  const keysPressed1 = {\n    'w': false,\n    'a': false,\n    's': false,\n    'd': false\n  };\n  window.addEventListener(\"keydown\", keysPressed, false);\n  window.addEventListener(\"keyup\", keysReleased, false);\n  var keys = {\n    'w': false,\n    'a': false,\n    's': false,\n    'd': false\n  };\n\n  function keysPressed(e) {\n    // store an entry for every key pressed\n    keys[e.key] = true;\n    sendMessage(JSON.stringify(keys));\n    setNewMessage(\"\");\n  }\n\n  function keysReleased(e) {\n    keys[e.key] = false;\n  } // document.addEventListener('keydown', (event) => {\n  //     keysPressed[event.key] = true;\n  // });\n  // document.addEventListener('keyup', (event) => {\n  //     keysPressed[event.key] = false;\n  // });\n  // const handleKeyPress = (event) => {\n  //   sendMessage(JSON.stringify(keysPressed));\n  //   setNewMessage(\"\");\n  // }\n  // sendMessage(JSON.stringify(keysPressed));\n  // setNewMessage(\"\");\n\n\n  const handleNewMessageChange = event => {\n    setNewMessage(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-room-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"room-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"Room: \", roomId), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"messages-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ol\", {\n    className: \"messages-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, messages.map((message, i) => /*#__PURE__*/React.createElement(\"li\", {\n    key: i,\n    className: `message-item ${message.ownedByCurrentUser ? \"my-message\" : \"received-message\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, message.body)))), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: newMessage,\n    onChange: handleNewMessageChange,\n    placeholder: \"Write message...\",\n    className: \"new-message-input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ChatRoom;","map":{"version":3,"sources":["C:/Users/alanc/Desktop/socket.io-react-hooks-chat-master/client/src/ChatRoom/ChatRoom.jsx"],"names":["React","useChat","ChatRoom","props","roomId","match","params","messages","sendMessage","newMessage","setNewMessage","useState","keysPressed1","window","addEventListener","keysPressed","keysReleased","keys","e","key","JSON","stringify","handleNewMessageChange","event","target","value","map","message","i","ownedByCurrentUser","body"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAK,CAACE,KAAN,CAAYC,MAA/B;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BP,OAAO,CAACG,MAAD,CAAzC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BV,KAAK,CAACW,QAAN,CAAe,EAAf,CAApC;AACA,QAAMC,YAAY,GAAG;AAAC,SAAI,KAAL;AAAY,SAAI,KAAhB;AAAuB,SAAI,KAA3B;AAAkC,SAAI;AAAtC,GAArB;AAEAC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCC,WAAnC,EAAgD,KAAhD;AACAF,EAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCE,YAAjC,EAA+C,KAA/C;AAEF,MAAIC,IAAI,GAAG;AAAC,SAAI,KAAL;AAAY,SAAI,KAAhB;AAAuB,SAAI,KAA3B;AAAkC,SAAI;AAAtC,GAAX;;AAEA,WAASF,WAAT,CAAqBG,CAArB,EAAwB;AACvB;AACAD,IAAAA,IAAI,CAACC,CAAC,CAACC,GAAH,CAAJ,GAAc,IAAd;AACCX,IAAAA,WAAW,CAACY,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAD,CAAX;AACAP,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD;;AAED,WAASM,YAAT,CAAsBE,CAAtB,EAAyB;AACxBD,IAAAA,IAAI,CAACC,CAAC,CAACC,GAAH,CAAJ,GAAc,KAAd;AACA,GApB2B,CAsB1B;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;;;AAGA,QAAMG,sBAAsB,GAAIC,KAAD,IAAW;AACxCb,IAAAA,aAAa,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAiCrB,MAAjC,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,QAAQ,CAACmB,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,kBACZ;AACE,IAAA,GAAG,EAAEA,CADP;AAEE,IAAA,SAAS,EAAG,gBACVD,OAAO,CAACE,kBAAR,GAA6B,YAA7B,GAA4C,kBAC7C,EAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGF,OAAO,CAACG,IANX,CADD,CADH,CADF,CAFF,eAgBE;AACE,IAAA,KAAK,EAAErB,UADT;AAEE,IAAA,QAAQ,EAAEa,sBAFZ;AAGE,IAAA,WAAW,EAAC,kBAHd;AAIE,IAAA,SAAS,EAAC,yBAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF;AA4BD,CAxED;;AA0EA,eAAepB,QAAf","sourcesContent":["import React from \"react\";\n\nimport \"./ChatRoom.css\";\nimport useChat from \"../useChat\";\n\nconst ChatRoom = (props) => {\n  const { roomId } = props.match.params;\n  const { messages, sendMessage } = useChat(roomId);\n  const [newMessage, setNewMessage] = React.useState(\"\");\n  const keysPressed1 = {'w':false, 'a':false, 's':false, 'd':false};\n\n  window.addEventListener(\"keydown\", keysPressed, false);\n  window.addEventListener(\"keyup\", keysReleased, false);\n\nvar keys = {'w':false, 'a':false, 's':false, 'd':false};\n\nfunction keysPressed(e) {\n\t// store an entry for every key pressed\n\tkeys[e.key] = true;\n  sendMessage(JSON.stringify(keys));\n  setNewMessage(\"\");\n}\n\nfunction keysReleased(e) {\n\tkeys[e.key] = false;\n}\n\n  // document.addEventListener('keydown', (event) => {\n  //     keysPressed[event.key] = true;\n  // });\n\n  // document.addEventListener('keyup', (event) => {\n  //     keysPressed[event.key] = false;\n  // });\n\n  // const handleKeyPress = (event) => {\n  //   sendMessage(JSON.stringify(keysPressed));\n  //   setNewMessage(\"\");\n  // }\n\n\n  // sendMessage(JSON.stringify(keysPressed));\n  // setNewMessage(\"\");\n\n\n  const handleNewMessageChange = (event) => {\n    setNewMessage(event.target.value);\n  };\n\n  return (\n    <div className=\"chat-room-container\">\n      <h1 className=\"room-name\">Room: {roomId}</h1>\n      <div className=\"messages-container\">\n        <ol className=\"messages-list\">\n          {messages.map((message, i) => (\n            <li\n              key={i}\n              className={`message-item ${\n                message.ownedByCurrentUser ? \"my-message\" : \"received-message\"\n              }`}\n            >\n              {message.body}\n            </li>\n          ))}\n        </ol>\n      </div>\n      <textarea\n        value={newMessage}\n        onChange={handleNewMessageChange}\n        placeholder=\"Write message...\"\n        className=\"new-message-input-field\"\n      />\n      {/* <button onKeyPress={handleKeyPress} className=\"send-message-button\">\n        Send\n      </button> */}\n    </div>\n  );\n};\n\nexport default ChatRoom;\n"]},"metadata":{},"sourceType":"module"}