{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alanc\\\\Desktop\\\\socket.io-react-hooks-chat-master\\\\client\\\\src\\\\ChatRoom\\\\ChatRoom.jsx\";\nimport React from \"react\";\nimport \"./ChatRoom.css\";\nimport useChat from \"../useChat\";\nimport Space from './space.jpg';\nconst prev_keysPressed = {\n  'w': false,\n  'a': false,\n  's': false,\n  'd': false\n};\nconst curr_keysPressed = {\n  'w': false,\n  'a': false,\n  's': false,\n  'd': false\n};\n\nconst ChatRoom = props => {\n  const {\n    roomId\n  } = props.match.params;\n  const {\n    messages,\n    sendMessage\n  } = useChat(roomId);\n  const [newMessage, setNewMessage] = React.useState(\"\"); // const keysPressed = {'w':false, 'a':false, 's':false, 'd':false};\n\n  document.addEventListener('keydown', e => curr_keysPressed[e.key] = true);\n  document.addEventListener('keyup', e => curr_keysPressed[e.key] = false);\n  document.body.style.overflow = \"hidden\";\n\n  const handleKeyPress = event => {\n    if (JSON.stringify(prev_keysPressed) !== JSON.stringify(curr_keysPressed)) {\n      sendMessage(JSON.stringify(curr_keysPressed));\n      setNewMessage(\"\");\n      prev_keysPressed['w'] = curr_keysPressed['w'];\n      prev_keysPressed['a'] = curr_keysPressed['a'];\n      prev_keysPressed['s'] = curr_keysPressed['s'];\n      prev_keysPressed['d'] = curr_keysPressed['d'];\n    }\n  };\n\n  const handleNewMessageChange = event => {//setNewMessage(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onKeyUp: handleKeyPress,\n    onKeyDown: handleKeyPress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"room-page\",\n    src: Space,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"iframe\", {\n    src: \"https://viewer.millicast.com/v2?streamId=hrFywT/kgplc3ye\",\n    allowFullScreen: true,\n    className: \"room-video\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"room-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"Name: \", roomId), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: newMessage,\n    onChange: handleNewMessageChange,\n    className: \"new-message-input-field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ChatRoom;","map":{"version":3,"sources":["C:/Users/alanc/Desktop/socket.io-react-hooks-chat-master/client/src/ChatRoom/ChatRoom.jsx"],"names":["React","useChat","Space","prev_keysPressed","curr_keysPressed","ChatRoom","props","roomId","match","params","messages","sendMessage","newMessage","setNewMessage","useState","document","addEventListener","e","key","body","style","overflow","handleKeyPress","event","JSON","stringify","handleNewMessageChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,MAAMC,gBAAgB,GAAG;AAAC,OAAI,KAAL;AAAY,OAAI,KAAhB;AAAuB,OAAI,KAA3B;AAAkC,OAAI;AAAtC,CAAzB;AACA,MAAMC,gBAAgB,GAAG;AAAC,OAAI,KAAL;AAAY,OAAI,KAAhB;AAAuB,OAAI,KAA3B;AAAkC,OAAI;AAAtC,CAAzB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAK,CAACE,KAAN,CAAYC,MAA/B;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA4BV,OAAO,CAACM,MAAD,CAAzC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8Bb,KAAK,CAACc,QAAN,CAAe,EAAf,CAApC,CAH0B,CAK1B;;AACAC,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqCC,CAAC,IAAIb,gBAAgB,CAACa,CAAC,CAACC,GAAH,CAAhB,GAA0B,IAApE;AACAH,EAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCC,CAAC,IAAIb,gBAAgB,CAACa,CAAC,CAACC,GAAH,CAAhB,GAA0B,KAAlE;AAEAH,EAAAA,QAAQ,CAACI,IAAT,CAAcC,KAAd,CAAoBC,QAApB,GAA+B,QAA/B;;AAEA,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAChC,QAAGC,IAAI,CAACC,SAAL,CAAetB,gBAAf,MAAqCqB,IAAI,CAACC,SAAL,CAAerB,gBAAf,CAAxC,EAAyE;AACvEO,MAAAA,WAAW,CAACa,IAAI,CAACC,SAAL,CAAerB,gBAAf,CAAD,CAAX;AACAS,MAAAA,aAAa,CAAC,EAAD,CAAb;AACAV,MAAAA,gBAAgB,CAAC,GAAD,CAAhB,GAAwBC,gBAAgB,CAAC,GAAD,CAAxC;AACAD,MAAAA,gBAAgB,CAAC,GAAD,CAAhB,GAAwBC,gBAAgB,CAAC,GAAD,CAAxC;AACAD,MAAAA,gBAAgB,CAAC,GAAD,CAAhB,GAAwBC,gBAAgB,CAAC,GAAD,CAAxC;AACAD,MAAAA,gBAAgB,CAAC,GAAD,CAAhB,GAAwBC,gBAAgB,CAAC,GAAD,CAAxC;AACD;AACF,GATD;;AAWA,QAAMsB,sBAAsB,GAAIH,KAAD,IAAW,CACxC;AACD,GAFD;;AAKA,sBACE;AAAM,IAAA,OAAO,EAAED,cAAf;AAA+B,IAAA,SAAS,EAAEA,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,EAAEpB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAQ,IAAA,GAAG,EAAC,0DAAZ;AAAuE,IAAA,eAAe,MAAtF;AAAuF,IAAA,SAAS,EAAC,YAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAIE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAiCK,MAAjC,CAJF,eAKE;AACE,IAAA,KAAK,EAAEK,UADT;AAEE,IAAA,QAAQ,EAAEc,sBAFZ;AAGE,IAAA,SAAS,EAAC,yBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AAaD,CAxCD;;AA0CA,eAAerB,QAAf","sourcesContent":["import React from \"react\";\nimport \"./ChatRoom.css\";\nimport useChat from \"../useChat\";\nimport Space from './space.jpg'\n\nconst prev_keysPressed = {'w':false, 'a':false, 's':false, 'd':false};\nconst curr_keysPressed = {'w':false, 'a':false, 's':false, 'd':false};\n\nconst ChatRoom = (props) => {\n  const { roomId } = props.match.params;\n  const { messages, sendMessage } = useChat(roomId);\n  const [newMessage, setNewMessage] = React.useState(\"\");\n  \n  // const keysPressed = {'w':false, 'a':false, 's':false, 'd':false};\n  document.addEventListener('keydown', e => curr_keysPressed[e.key] = true)\n  document.addEventListener('keyup', e => curr_keysPressed[e.key] = false)\n\n  document.body.style.overflow = \"hidden\"\n\n  const handleKeyPress = (event) => {\n    if(JSON.stringify(prev_keysPressed) !== JSON.stringify(curr_keysPressed)){\n      sendMessage(JSON.stringify(curr_keysPressed));\n      setNewMessage(\"\");\n      prev_keysPressed['w'] = curr_keysPressed['w'];\n      prev_keysPressed['a'] = curr_keysPressed['a'];\n      prev_keysPressed['s'] = curr_keysPressed['s'];\n      prev_keysPressed['d'] = curr_keysPressed['d'];\n    }\n  }\n\n  const handleNewMessageChange = (event) => {\n    //setNewMessage(event.target.value);\n  };\n\n\n  return (\n    <div  onKeyUp={handleKeyPress} onKeyDown={handleKeyPress}>\n      <img className=\"room-page\" src={Space}/>\n      <iframe src=\"https://viewer.millicast.com/v2?streamId=hrFywT/kgplc3ye\" allowFullScreen className=\"room-video\"></iframe>\n      {/* <iframe src=\"https://viewer.millicast.com/v2?streamId=hrFywT/kgplc3ye\" allowFullScreen align=\"middle\" width=\"640\" height=\"480\"></iframe> */}\n      <h1 className=\"room-name\">Name: {roomId}</h1>\n      <textarea\n        value={newMessage}\n        onChange={handleNewMessageChange}\n        className=\"new-message-input-field\"\n      />\n    </div>\n  );\n};\n\nexport default ChatRoom;\n"]},"metadata":{},"sourceType":"module"}